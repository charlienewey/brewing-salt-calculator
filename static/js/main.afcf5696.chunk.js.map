{"version":3,"sources":["IonProfileEntry.js","BrewEntry.js","DataTables.js","Review.js","SolveProfile.js","App.js","reportWebVitals.js","index.js"],"names":["IonProfileEntry","props","classNames","handleIonChange","bind","event","ion","undefined","this","onIonChange","Error","target","value","join","Grid","container","justify","className","spacing","map","item","xs","sm","md","lg","TextField","label","charAt","toUpperCase","slice","type","min","state","onChange","e","InputProps","startAdornment","InputAdornment","position","variant","required","fullWidth","React","Component","BrewEntry","handleVolumeChange","handleMineralChange","onMineralChange","name","onVolumeChange","Typography","gutterBottom","FormLabel","component","FormGroup","mineralProfiles","profile","mineralKey","mineral","FormControlLabel","control","Checkbox","checked","availableMinerals","WaterProfilesTable","selectRow","columns","WaterProfilesColumns","data","WaterProfiles","striped","highlightOnHover","pointerOnHover","onRowClicked","pagination","paginationPerPage","defaultSortField","useStyles","makeStyles","theme","listItem","padding","total","fontWeight","title","marginTop","copyObjectWithDefaults","keys","defaultValue","newObject","i","length","key","Review","classes","source","sourceProfile","targetProfile","brewingProfile","waterVolume","parseFloat","minerals","m","ions","Object","solved","scaledMineralAdditions","unscaledMineralAdditions","JSON","stringify","solverOutput","nLitres","ionNames","allMinerals","margins","mineralNames","filter","y","X","X_row","j","mineralName","k","mineralValue","push","Xm","Matrix","w","fcnnlsVector","maxIterations","wUnscaled","wScaled","unscaledValue","scaledValue","isNaN","apparentProfile","contribution","unscaledAdditions","scaledAdditions","solveWaterChemistry","console","log","Fragment","TableContainer","Paper","Table","table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","scope","toFixed","Math","abs","roWater","calcium","magnesium","sodium","sulfate","chloride","bicarbonate","Copyright","color","Link","href","Date","getFullYear","SaltCalculatorApp","steps","defaultState","activeStep","handleSourceProfileChange","handleTargetProfileChange","handleMineralInventoryChange","selectPresetTarget","handleNext","handleBack","prevProps","setState","amount","availability","row","midpoint","margin","step","Accordion","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","CssBaseline","layout","paper","Stepper","stepper","Step","StepLabel","getStepContent","buttons","Button","onClick","button","window","print","withStyles","width","marginLeft","marginRight","breakpoints","up","marginBottom","display","justifyContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afcf5696.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\n\r\nclass IonProfileEntry extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.classNames = props.classNames;\r\n    this.handleIonChange = this.handleIonChange.bind(this);\r\n  };\r\n\r\n  handleIonChange (event, ion) {\r\n    if (this.props.onIonChange !== undefined && this.props.onIonChange !== null) {\r\n      this.props.onIonChange(event.target.value, ion);\r\n    } else {\r\n      throw new Error('Missing onIonChange prop');\r\n    }\r\n  };\r\n\r\n  render () {\r\n    const classNames = [this.classNames, 'IonEntry'].join(' ')\r\n    const ions = ['calcium', 'magnesium', 'sodium', 'sulfate', 'chloride', 'bicarbonate'];\r\n\r\n    return (\r\n      <Grid container justify='center' className={classNames} spacing={1}>\r\n        {ions.map((ion) => (\r\n          <Grid key={ion} item xs={12} sm={6} md={4} lg={2}>\r\n            <TextField\r\n              label={ion.charAt(0).toUpperCase() + ion.slice(1)}\r\n              type='number'\r\n              min={0.0}\r\n              value={this.props.state[ion]}\r\n              onChange={(e) => this.handleIonChange(e, ion)}\r\n              InputProps={{ startAdornment: <InputAdornment position='start'>ppm</InputAdornment> }}\r\n              variant='outlined'\r\n              required\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  }\r\n};\r\n\r\nexport default IonProfileEntry;","import React from 'react';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport mineralProfiles from './data/mineral_profiles.json';\r\n\r\n\r\nclass BrewEntry extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.classNames = props.classNames;\r\n    this.handleVolumeChange = this.handleVolumeChange.bind(this);\r\n    this.handleMineralChange = this.handleMineralChange.bind(this);\r\n  };\r\n\r\n  handleMineralChange (event, value) {\r\n    if (this.props.onMineralChange !== undefined && this.props.onMineralChange !== null) {\r\n      this.props.onMineralChange(value, event.target.name);\r\n    } else {\r\n      throw new Error('Missing onMineralChange prop');\r\n    }\r\n  };\r\n\r\n  handleVolumeChange (event) {\r\n    if (this.props.onVolumeChange !== undefined && this.props.onVolumeChange !== null) {\r\n      this.props.onVolumeChange(event.target.value);\r\n    } else {\r\n      throw new Error('Missing onVolumeChange prop');\r\n    }\r\n  };\r\n\r\n  render () {\r\n    const classNames = [this.classNames, 'BrewSetup'].join(' ')\r\n    return (\r\n      <div>\r\n        <Grid container justify='center' className={classNames} spacing={1}>\r\n          <Grid item xs={12} sm={6} md={4} lg={4}>\r\n            <Typography variant='h6' gutterBottom>Mineral Inventory</Typography>\r\n\r\n            <FormLabel component='legend'>Which brewing salts do you have available?</FormLabel>\r\n            <FormGroup>\r\n              {mineralProfiles.map((profile) => {\r\n                const mineralKey = profile.mineral;\r\n                return (<FormControlLabel key={profile.mineral} control={\r\n                  <Checkbox\r\n                    name={mineralKey}\r\n                    onChange={(e, value) => this.handleMineralChange(e, value)}\r\n                    checked={this.props.state.availableMinerals[mineralKey]} />\r\n                } label={profile.mineral} />\r\n              )})}\r\n            </FormGroup>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <br />\r\n        <br />\r\n        <Grid container justify='center' className={classNames} spacing={1}>\r\n          <Grid item xs={12} sm={6} md={4} lg={4}>\r\n            <Typography variant='h6' gutterBottom>Water Volume</Typography>\r\n            <TextField\r\n              label='Total Brewing Water Volume'\r\n              type='number'\r\n              min={0.0}\r\n              value={this.props.state['waterVolume']}\r\n              onChange={(e) => this.handleVolumeChange(e)}\r\n              InputProps={{ startAdornment: <InputAdornment position='start'>litres</InputAdornment> }}\r\n              variant='outlined'\r\n              required\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default BrewEntry;","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport WaterProfiles from './data/water_profiles.json';\r\nimport WaterProfilesColumns from './data/water_profiles_columns.json';\r\nimport MineralProfiles from './data/mineral_profiles.json';\r\nimport MineralProfilesColumns from './data/mineral_profiles_columns.json';\r\n\r\nclass MineralProfilesTable extends React.Component {\r\n  render () {\r\n    return (\r\n      <Grid container justify='center' className='DataTable MineralProfilesTable' spacing={1}>\r\n        <Grid item xs={12} sm={12} lg={12}>\r\n          <DataTable\r\n            title={'Mineral Ion Contributions (per g, per Litre)'}\r\n            columns={MineralProfilesColumns}\r\n            data={MineralProfiles}\r\n            striped={true}\r\n            pagination\r\n            paginationPerPage={10}>\r\n          </DataTable>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n};\r\n\r\nclass WaterProfilesTable extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.selectRow = props.selectRow;\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Grid container justify='center' className='DataTable WaterProfilesTable' spacing={1}>\r\n        <Grid item xs={12} sm={12} lg={12}>\r\n          <DataTable\r\n            columns={WaterProfilesColumns}\r\n            data={WaterProfiles}\r\n            striped={true}\r\n            highlightOnHover={true}\r\n            pointerOnHover={true}\r\n            onRowClicked={this.selectRow}\r\n            pagination\r\n            paginationPerPage={10}\r\n            defaultSortField='style'>\r\n          </DataTable>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n};\r\n\r\nexport { \r\n  MineralProfilesTable,\r\n  WaterProfilesTable\r\n};","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport solveWaterChemistry from './SolveProfile';\r\nimport mineralProfiles from './data/mineral_profiles.json';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  total: {\r\n    fontWeight: 700,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction copyObjectWithDefaults(keys, target, defaultValue) {\r\n  let newObject = {};\r\n  for (let i = 0; i < keys.length; i++) {\r\n    let key = keys[i];\r\n    if (target && target[key]) {\r\n      newObject[key] = target[key];\r\n    } else {\r\n      newObject[key] = defaultValue;\r\n    }\r\n  };\r\n  return newObject;\r\n};\r\n\r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n\r\n  const source = {...props.state.sourceProfile};\r\n  const target = {...props.state.targetProfile};\r\n\r\n  const availableMinerals = props.state.brewingProfile.availableMinerals;\r\n  const waterVolume = parseFloat(props.state.brewingProfile.waterVolume);\r\n\r\n  const minerals = mineralProfiles.map((m) => m.mineral);\r\n  const ions = Object.keys(source);\r\n\r\n  let solved = {};\r\n  let scaledMineralAdditions = {};\r\n  let unscaledMineralAdditions = {};\r\n\r\n  if (JSON.stringify(source) !== JSON.stringify(target)) {\r\n    const solverOutput = solveWaterChemistry(source, target, availableMinerals, waterVolume);\r\n\r\n    console.log(solverOutput['scaledAdditions']);\r\n\r\n    solved = copyObjectWithDefaults(ions, solverOutput['apparentProfile'], 0.0);\r\n    scaledMineralAdditions = copyObjectWithDefaults(minerals, solverOutput['scaledAdditions'], 0.0);\r\n    unscaledMineralAdditions = copyObjectWithDefaults(minerals, solverOutput['unscaledAdditions'], 0.0);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant='h6' gutterBottom>\r\n        Water Profile Summary\r\n      </Typography>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} size='small' aria-label='a dense table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell></TableCell>\r\n              {ions.map((key) => (\r\n                <TableCell key={key} align='right'>{key.charAt(0).toUpperCase() + key.slice(1)}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell component='th' scope='row'>Source Water Profile</TableCell>\r\n                {ions.map((ion) => (\r\n                  <TableCell key={ion} align='right'>\r\n                    {source[ion]}\r\n                  </TableCell>\r\n                ))}\r\n            </TableRow>\r\n\r\n            <TableRow>\r\n              <TableCell component='th' scope='row'>Target Water Profile{target['margin'] ? ' (± Margin of Error)' : null}</TableCell>\r\n                {ions.map((ion) => (\r\n                  <TableCell key={ion} align='right'>\r\n                    {target[ion] + (target['margin'] ? ' (±' + target['margin'][ion] + ')' : '')}\r\n                  </TableCell>\r\n                ))}\r\n            </TableRow>\r\n\r\n            <TableRow>\r\n              <TableCell component='th' scope='row'><strong>Optimised Water Profile</strong></TableCell>\r\n                {ions.map((ion) => (\r\n                  <TableCell key={ion} align='right'>\r\n                    <strong>{(solved[ion] || 0.0).toFixed(0)}</strong>\r\n                  </TableCell>\r\n                ))}\r\n            </TableRow>\r\n\r\n            {target['margin'] ? (\r\n              <TableRow>\r\n                <TableCell component='th' scope='row'>Suitable?</TableCell>\r\n                  {ions.map((ion) => (\r\n                    <TableCell key={ion} align='right'>\r\n                      {Math.abs((solved[ion] || 0.0).toFixed(0) - target[ion]) <= target['margin'][ion] ? '✓' : '✗' }\r\n                    </TableCell>\r\n                  ))}\r\n              </TableRow>\r\n            ) : null}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <br />\r\n      <Typography variant='h6' gutterBottom>\r\n        Addition Summary\r\n      </Typography>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} size='small' aria-label='a dense table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell></TableCell>\r\n              {minerals.map((m) => (\r\n                <TableCell key={m} align='right'>{m}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell component='th' scope='row'>per&nbsp;Litre</TableCell>\r\n              {minerals.map((m) => (\r\n                <TableCell key={m} align='right'>\r\n                  {(unscaledMineralAdditions[m] || 0.0).toFixed(3)}g\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n\r\n            <TableRow>\r\n              <TableCell component='th' scope='row'>\r\n                Total&nbsp;(to&nbsp;treat&nbsp;{waterVolume.toFixed(2)}L)\r\n              </TableCell>\r\n              {minerals.map((m) => (\r\n                <TableCell key={m} align='right'>\r\n                  {(scaledMineralAdditions[m] || 0.0).toFixed(2)}g\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n    </React.Fragment>\r\n  );\r\n};","import { Matrix } from 'ml-matrix';\r\nimport { fcnnlsVector } from 'ml-fcnnls';\r\n\r\nimport mineralProfiles from './data/mineral_profiles.json';\r\n\r\nexport default function solveWaterChemistry (sourceProfile, targetProfile, availableMinerals, nLitres) {\r\n  const waterVolume = (nLitres || 1.0);\r\n\r\n  // store keys to ensure dictionaries are traversed in the same order\r\n  const ionNames = Object.keys(sourceProfile);\r\n  const allMinerals = mineralProfiles.map((m) => m.mineral);\r\n\r\n  // add (or fill) margins of error\r\n  let margins = {};\r\n  if (targetProfile['margin']) {\r\n    margins = targetProfile['margin'];\r\n  } else {\r\n    for (let i = 0; i < ionNames.length; i++) {\r\n      const ion = ionNames[i];\r\n      margins[ion] = 1.0;\r\n    }\r\n  }\r\n\r\n  // if \"in stock\" minerals empty or undefined, assume all in stock\r\n  if (availableMinerals === null ||\r\n      availableMinerals === undefined ||\r\n      Object.keys(availableMinerals).length === 0) {\r\n    let availableMinerals = {};\r\n    for (let i = 0; i < allMinerals.length; i++) {\r\n      const mineral = allMinerals[i];\r\n      availableMinerals[mineral] = true;\r\n    }\r\n  };\r\n\r\n  // filter for allowable minerals\r\n  const mineralNames = allMinerals.filter((m) => availableMinerals[m]);\r\n\r\n  // scale target variables according to the acceptable margin of error\r\n  const y = ionNames.map((ion) => ((targetProfile[ion] - sourceProfile[ion]) / margins[ion]));\r\n\r\n  // traverse mineral contribution data\r\n  let X = [];\r\n  for (let i = 0; i < ionNames.length; i++) {\r\n    let X_row = [];\r\n    const ion = ionNames[i];\r\n    for (let j = 0; j < mineralNames.length; j++) {\r\n      const mineralName = mineralNames[j];\r\n      for (let k = 0; k < mineralProfiles.length; k++) {\r\n        const mineral = mineralProfiles[k];\r\n        if (mineral['mineral'] === mineralName) {\r\n          const mineralValue = parseFloat(mineral[ion] || 0.0) / margins[ion];\r\n          X_row.push(mineralValue);\r\n        }\r\n      };\r\n    };\r\n    X.push(X_row);\r\n  };\r\n  \r\n  // create NNLS matrix\r\n  const Xm = new Matrix(X);\r\n\r\n  // compute result\r\n  const options = {maxIterations: 1000};\r\n  const w = fcnnlsVector(Xm, y, options);\r\n\r\n  // convert result into a dictionary\r\n  let wUnscaled = {};\r\n  let wScaled = {};\r\n  for (let i = 0; i < mineralNames.length; i++) {\r\n    let mineralName = mineralNames[i];\r\n    const unscaledValue = w[i];\r\n    const scaledValue = (unscaledValue * waterVolume);\r\n    wUnscaled[mineralName] = 0.0;\r\n    wScaled[mineralName] = 0.0;\r\n    if (! isNaN(scaledValue)) {\r\n      wScaled[mineralName] = scaledValue;\r\n      wUnscaled[mineralName] = unscaledValue;\r\n    }\r\n  };\r\n\r\n  // finally, reconstruct apparent profile\r\n  let apparentProfile = {};\r\n  for (let i = 0; i < mineralNames.length; i++) {\r\n    const mineralName = mineralNames[i];\r\n    for (let j = 0; j < mineralProfiles.length; j++) {\r\n      const mineral = mineralProfiles[j];\r\n      if (mineral['mineral'] === mineralName) {\r\n        const scaledValue = w[i];\r\n        if (!isNaN(scaledValue)) {\r\n          for (let k = 0; k < ionNames.length; k++) {\r\n            const ion = ionNames[k];\r\n            const mineralValue = parseFloat(mineral[ion] || 0.0);\r\n            const contribution = mineralValue * scaledValue;\r\n            apparentProfile[ion] = parseFloat(apparentProfile[ion] || sourceProfile[ion]) + contribution;\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  // ensure all fields are populated\r\n  for (let i = 0; i < ionNames.length; i++) {\r\n    let mineral = mineralNames[i];\r\n    if (wUnscaled[mineral] === undefined || wUnscaled[mineral] === null) {\r\n      wUnscaled[mineral] = 0.0;\r\n    } else {\r\n      wUnscaled[mineral] = parseFloat(wUnscaled[mineral]);\r\n    }\r\n\r\n    if (wScaled[mineral] === undefined || wScaled[mineral] === null) {\r\n      wScaled[mineral] = 0.0;\r\n    } else {\r\n      wScaled[mineral] = parseFloat(wScaled[mineral]);\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < ionNames.length; i++) {\r\n    let ion = ionNames[i];\r\n    if (apparentProfile[ion] === undefined || apparentProfile[ion] === null) {\r\n      apparentProfile[ion] = 0.0;\r\n    } else {\r\n      apparentProfile[ion] = parseFloat(apparentProfile[ion]);\r\n    }\r\n  }\r\n\r\n  // define the return object\r\n  const solvedProfile = {\r\n    unscaledAdditions: wUnscaled,\r\n    scaledAdditions: wScaled,\r\n    apparentProfile: apparentProfile\r\n  };\r\n\r\n  return solvedProfile;\r\n};","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport IonProfileEntry from './IonProfileEntry';\r\nimport BrewEntry from './BrewEntry';\r\nimport { WaterProfilesTable } from './DataTables';\r\nimport Review from './Review';\r\n\r\n\r\nconst roWater = {\r\n  calcium: 1,\r\n  magnesium: 0,\r\n  sodium: 0,\r\n  sulfate: 0,\r\n  chloride: 4,\r\n  bicarbonate: 16\r\n};\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant='body2' color='textSecondary' align='center'>\r\n      {'Copyright © '}\r\n      <Link color='inherit' href='https://github.com/charlienewey/'>\r\n        Charles Newey\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 1024,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n});\r\n\r\nclass SaltCalculatorApp extends React.Component  {\r\n  steps = ['Source profile input', 'Target profile input', 'Brewing parameter input', 'Review results'];\r\n\r\n  defaultState = {\r\n    activeStep: 0,\r\n    sourceProfile: {...roWater},\r\n    targetProfile: {...roWater},\r\n    brewingProfile: {\r\n      waterVolume: 20.0,\r\n      availableMinerals: {\r\n        'Gypsum': true,\r\n        'Calcium Chloride': true,\r\n        'Epsom Salt': true,\r\n        'Magnesium Chloride': false,\r\n        'Canning Salt': true,\r\n        'Baking Soda': true,\r\n        'Chalk': true,\r\n        'Pickling Lime': false\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor (props) {\r\n    super(props);\r\n    this.classes = props.classes;\r\n\r\n    if (props.state === undefined || props.state === null) {\r\n      this.state = {...this.defaultState};\r\n    } else {\r\n      this.state = props.state;\r\n    };\r\n \r\n    // water profile state\r\n    this.handleSourceProfileChange = this.handleSourceProfileChange.bind(this);\r\n    this.handleTargetProfileChange = this.handleTargetProfileChange.bind(this);\r\n    this.handleMineralInventoryChange = this.handleMineralInventoryChange.bind(this);\r\n    this.handleVolumeChange = this.handleVolumeChange.bind(this);\r\n    this.selectPresetTarget = this.selectPresetTarget.bind(this);\r\n\r\n    // pagination state controls\r\n    this.handleNext = this.handleNext.bind(this);\r\n    this.handleBack = this.handleBack.bind(this);\r\n  };\r\n\r\n  componentDidUpdate (prevProps) {\r\n    if (prevProps.state !== this.props.state) {\r\n      this.setState(this.props.state);\r\n    };\r\n  };\r\n\r\n  handleSourceProfileChange (amount, ion) {\r\n    var sourceProfile = this.state.sourceProfile || this.defaultState.sourceProfile; \r\n    sourceProfile[ion] = amount;\r\n    this.setState({sourceProfile: sourceProfile});\r\n  };\r\n\r\n  handleTargetProfileChange (amount, ion) {\r\n    var targetProfile = this.state.targetProfile || this.defaultState.targetProfile; \r\n    targetProfile[ion] = amount;\r\n    this.setState({targetProfile: targetProfile});\r\n  };\r\n\r\n  handleMineralInventoryChange (availability, mineral) {\r\n    var brewingProfile = this.state.brewingProfile || this.defaultState.brewingProfile;\r\n    brewingProfile.availableMinerals[mineral] = availability;\r\n    this.setState({brewingProfile: brewingProfile});\r\n  };\r\n\r\n  handleVolumeChange (amount) {\r\n    var brewingProfile = this.state.brewingProfile || this.defaultState.brewingProfile;\r\n    brewingProfile.waterVolume = amount;\r\n    this.setState({brewingProfile: brewingProfile});\r\n  };\r\n\r\n  selectPresetTarget (row) {\r\n    let state = {};\r\n    let keys = Object.keys(row);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      if (keys[i] === 'style') {\r\n        state[keys[i]] = row[keys[i]];\r\n      } else {\r\n        // set up target midpoint\r\n        state[keys[i]] = row[keys[i]].midpoint;\r\n\r\n        // set up margin for error\r\n        if (! state['margin']) {\r\n          state['margin'] = {};\r\n        }\r\n        state['margin'][keys[i]] = row[keys[i]].margin;\r\n      }\r\n    };\r\n    this.setState({targetProfile: state});\r\n  };\r\n\r\n  handleNext () {\r\n    this.setState({activeStep: this.state.activeStep + 1});\r\n  };\r\n\r\n  handleBack () {\r\n    this.setState({activeStep: this.state.activeStep - 1});\r\n  };\r\n\r\n  getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <React.Fragment>\r\n            <Typography variant='h6' gutterBottom>\r\n              Source Water Profile Input\r\n            </Typography>\r\n\r\n            <Typography gutterBottom>\r\n              Enter your source water profile here, with each mineral in parts per million. You can usually find these from\r\n              your municipal water provider's reports - or, if you're using bottled water, on the side of the bottle.\r\n            </Typography>\r\n\r\n            <Typography gutterBottom>\r\n              The default values below are those of Reverse Osmosis water - but if you're using distilled water, you can\r\n              just fill this list with zeroes.\r\n            </Typography>\r\n            <br />\r\n            <IonProfileEntry\r\n              classNames='sourceProfile'\r\n              state={this.state.sourceProfile}\r\n              onIonChange={this.handleSourceProfileChange}>\r\n            </IonProfileEntry>\r\n          </React.Fragment>\r\n        );\r\n      case 1:\r\n        return (\r\n          <React.Fragment>\r\n            <Typography variant='h6' gutterBottom>\r\n              Target Water Profile Input\r\n            </Typography>\r\n\r\n            <Typography gutterBottom>\r\n              Enter the values for your target water profile here. If you aren't sure which values to go for,\r\n              try using one of the presets listed in the table below. This list covers each major style in the \r\n              2015 BJCP style guide. For example, if you're brewing an American IPA, you can use \"21A - American IPA\" \r\n              as a starting point.\r\n            </Typography>\r\n\r\n            <Typography gutterBottom>\r\n              These values come from <a href=\"https://www.brunwater.com/\">Martin Brungard's \"Bru'n Water\" spreadsheet</a> \r\n              and <a href=\"https://www.moneaudebrassage.fr/\">Mon Eau de Brassage</a>.\r\n            </Typography>\r\n            <br />\r\n            <div>\r\n              <IonProfileEntry\r\n                classNames='targetProfile'\r\n                state={this.state.targetProfile}\r\n                onIonChange={this.handleTargetProfileChange}>\r\n              </IonProfileEntry>\r\n            </div>\r\n            <br />\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls='panel2a-content'\r\n                id='panel2a-header'>\r\n                Presets for BJCP Beer Styles\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <WaterProfilesTable\r\n                  selectRow={this.selectPresetTarget}>\r\n                </WaterProfilesTable>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          </React.Fragment>\r\n        );\r\n      case 2:\r\n        return (\r\n          <BrewEntry\r\n            state={this.state.brewingProfile}\r\n            onMineralChange={this.handleMineralInventoryChange}\r\n            onVolumeChange={this.handleVolumeChange}>\r\n          </BrewEntry>\r\n        );\r\n      case 3:\r\n        return <Review state={this.state} />\r\n      default:\r\n        throw new Error('Unknown step');\r\n    }\r\n  };\r\n\r\n  render () {\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <main className={this.classes.layout}>\r\n          <Paper className={this.classes.paper}>\r\n            <Typography component='h1' variant='h4' align='center'>\r\n              Brewing Salt Calculator\r\n            </Typography>\r\n\r\n            <Stepper activeStep={this.state.activeStep} className={this.classes.stepper}>\r\n              {this.steps.map((label) => (\r\n                <Step key={label}>\r\n                  <StepLabel>{label}</StepLabel>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n\r\n            <React.Fragment>\r\n              {this.getStepContent(this.state.activeStep)}\r\n              <div className={this.classes.buttons}>\r\n                {this.state.activeStep !== 0 && (\r\n                  <Button onClick={this.handleBack} className={this.classes.button}>\r\n                    Back\r\n                  </Button>\r\n                )}\r\n\r\n                {this.state.activeStep < this.steps.length - 1 ? (\r\n                    <Button variant='contained' color='primary' onClick={this.handleNext} className={this.classes.button}>Next</Button>\r\n                  ) : (\r\n                    <Button variant='contained' color='primary' onClick={window.print} className={this.classes.button}>Print Summary</Button>\r\n                  )\r\n                }\r\n              </div>\r\n            </React.Fragment>\r\n          </Paper>\r\n          <Copyright />\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SaltCalculatorApp);","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SaltSolverApp from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <SaltSolverApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}